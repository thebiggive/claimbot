version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@7.0.0
  codecov: codecov/codecov@1.1.3
  jira: circleci/jira@1.3.1
  slack: circleci/slack@3.4.2

jobs:
  test: # Also lints first
    docker:
      - image: circleci/php:8.0
        auth:
          username: $DOCKER_HUB_USERNAME
          password: $DOCKER_HUB_ACCESS_TOKEN

    steps:
      - checkout

      - run: sudo apt-get install -y libzip-dev zip
      - run: sudo docker-php-ext-install zip
      - run: sudo pecl install redis && sudo docker-php-ext-enable redis

      - restore_cache:
          keys:
            - composer-v1-{{ checksum "composer.lock" }}

      - run: composer install --no-interaction

      - save_cache:
          paths:
            - vendor
          key: composer-v1-{{ checksum "composer.lock" }}

      - run: composer run lint:check

      - run: composer run test-with-coverage

      - codecov/upload:
          file: 'coverage.xml'

workflows:
  build:
    jobs:
      - test:
          context:
            - docker-hub-creds
            - jira
            - slack
          post-steps:
            - jira/notify:
                job_type: build
                environment_type: development
            - slack/notify-on-failure: ~

  deploy-regression:
    jobs:
      - test:
          filters:
            branches:
              only:
                - develop
          context:
            - docker-hub-creds
            - jira
            - slack
      - aws-ecr/build-and-push-image:
          requires:
            - test
          repo: '${AWS_ECR_REPO_NAME}'
          region: AWS_REGION
          tag: 'regression,regression-${CIRCLE_SHA1}'
          post-steps:
            - slack/notify-on-failure: ~
            - jira/notify:
                job_type: deployment
            - slack/notify:
                color: '#009900'
                message: 'Next new run will use this code.'
                title: 'Regression: ClaimBot updated!'

  deploy-staging:
    jobs:
      - test:
          filters:
            branches:
              only:
                - develop
          context:
            - docker-hub-creds
            - jira
            - slack
      - aws-ecr/build-and-push-image:
          requires:
            - test
          repo: '${AWS_ECR_REPO_NAME}'
          region: AWS_REGION
          tag: 'staging,staging-${CIRCLE_SHA1}'
          post-steps:
            - slack/notify-on-failure: ~
            - jira/notify:
                job_type: deployment
                environment_type: staging
            - slack/notify:
                color: '#009900'
                message: 'Next new run will use this code.'
                title: 'Staging: ClaimBot deployed!'

  deploy-production:
    jobs:
      - test:
          filters:
            branches:
              only:
                - main
          context:
            - docker-hub-creds
            - jira
            - slack
      - aws-ecr/build-and-push-image:
          requires:
            - test
          repo: '${AWS_ECR_REPO_NAME}'
          region: AWS_REGION
          tag: 'production,production-${CIRCLE_SHA1}'
          post-steps:
            - slack/notify-on-failure: ~
            - jira/notify:
                job_type: deployment
                environment_type: production
            - slack/notify:
                color: '#009900'
                message: 'Next new run will use this code.'
                title: 'Production: ClaimBot deployed!'
